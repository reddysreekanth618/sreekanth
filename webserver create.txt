#!/bin/bash
sudo su
yum update -y
yum install httpd -y
cd /var/www/html
echo "GOOGLE" > index.html
service httpd start
chkconfig httpd on











#!/bin/bash
apt update
apt install -y openjdk-8-jdk 
apt install -y nfs-common


mkdir /var/lib/jenkins


jenkins slave


#!/bin/bash
curl https://get.docker.com/ | bash
apt update && apt install -y openjdk-8-jdk unzip
https://releases.hashicorp.com/terraform/1.2.9/terraform_1.2.9_freebsd_amd64.zip





packer_1.6.2_linux_amd64.zip
curl https://releases hashicorp.com/packer/1.62/packer_1.6.2_linux_amd64.zip

chmod 777 terraform && cp terraform /usr/local/bin/terraform
chmod 777 packer && cp packer /usr/local/bin/packer


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





{ "Fn::Join" : [ "-", [ {"Ref":"VPCNAME"},"IGW" ] ] }



AWSTemplateFormatVersion: 2010-09-09
Description: Deploying Basic Infra For AWS B24 Batch
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: VPC configuration parameters
        Parameters:
          - VPCNAME
          - VPCCIDR
          - PublicSubnetCIDR
          - SSHLocation
    ParameterLabels:
      VPCNAME:
        default: Enter NAME  of new VPC
      VPCCIDR:
        default: Enter CIDR of new VPC
      PublicSubnetCIDR:
        default: Enter CIDR of the public subnet
      SSHLocation:
        default: Subnet allowed to ssh on TCP to public subnet
Parameters:
  VPCNAME:
    Default: Test-vpc
    Description: VPC Name
    Type: String
  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.0.0/16
    Description: CIDR block for entire VPC.
    Type: String
  PublicSubnetCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.10.0/24
    Description: CIDR block for the public subnet
    Type: String
  SSHLocation:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-28
    Default: 0.0.0.0/0
    Description: Network allowed to ssh to instances in public subnet.
    Type: String
Mappings: {}
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: !Ref VPCNAME
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref VPCNAME
              - IGW
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - 'Public '
              - !Ref PublicSubnetCIDR
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - 'Public '
              - !Ref PublicSubnetCIDR
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicSubnetRouteTable
  PublicInstanceSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - 'PublicSG '
              - !Ref VPCCIDR
        - Key: CloudFormationStack
          Value: !Ref 'AWS::StackId'
Outputs:
  VPCId:
    Description: VPCId of the newly created VPC
    Value: !Ref VPC
  PublicSubnet:
    Description: SubnetId of the public subnet
    Value: !Ref PublicSubnet
  PublicSubnetRouteTable:
    Description: Public route table
    Value: !Ref PublicSubnetRouteTable
  PublicInstanceSG:
    Description: SG for instances in public subnet
    Value: !Ref PublicInstanceSG
